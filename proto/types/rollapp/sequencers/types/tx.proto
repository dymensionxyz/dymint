syntax = "proto3";
package rollapp.sequencers.types;

import "gogoproto/gogo.proto";
import "types/cosmos/msg/v1/msg.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/dymensionxyz/dymint/types/pb/rollapp/sequencers";

message MsgUpdateRewardAddress {
    option (cosmos.msg.v1.signer) = "operator";
    // Operator is the bech32-encoded address of the actor sending the update
    string operator = 1;
    // RewardAddr is a bech32 encoded sdk acc address
    string reward_addr = 2;
}

message MsgUpdateRewardAddressResponse {}

message MsgUpdateWhitelistedRelayers {
    option (cosmos.msg.v1.signer) = "operator";
    // Operator is the bech32-encoded address of the actor sending the update
    string operator = 1;
    // Relayers is an array of the whitelisted relayer addresses. Addresses are bech32-encoded strings.
    repeated string relayers = 2;
}

message MsgUpdateWhitelistedRelayersResponse {}

// ConsensusMsgUpsertSequencer is a consensus message to upsert the sequencer.
message ConsensusMsgUpsertSequencer {
    option (cosmos.msg.v1.signer) = "signer";

    // Signer is the bech32-encoded address of the consensus msg signer.
    // Expected to be an authorized address.
    string signer = 1;
    // Operator is the bech32-encoded address of the sequencer
    string operator = 2;
    // ConsPubKey is a tendermint consensus pub key of the sequencer
    google.protobuf.Any cons_pub_key = 3;
    // RewardAddr is the bech32-encoded sequencer's reward address
    string reward_addr = 4;
    // Relayers is an array of the whitelisted relayer addresses of the sequencer.
    // Addresses are bech32-encoded strings.
    repeated string relayers = 5;
}

message ConsensusMsgUpsertSequencerResponse {}
