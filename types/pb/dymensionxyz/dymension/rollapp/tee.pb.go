// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/dymensionxyz/dymension/rollapp/tee.proto

package rollapp

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgFastFinalizeWithTEE fast-finalizes rollapp state using TEE attestation
type MsgFastFinalizeWithTEE struct {
	// creator must be the active sequencer for the rollapp
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// attestation_token is the JWT token from GCP
	AttestationToken string `protobuf:"bytes,4,opt,name=attestation_token,json=attestationToken,proto3" json:"attestation_token,omitempty"`
	// nonce contains the data that was signed by TEE
	Nonce TEENonce `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce"`
	// what should be finalized immediately
	StateIndex uint64 `protobuf:"varint,6,opt,name=state_index,json=stateIndex,proto3" json:"state_index,omitempty"`
}

func (m *MsgFastFinalizeWithTEE) Reset()         { *m = MsgFastFinalizeWithTEE{} }
func (m *MsgFastFinalizeWithTEE) String() string { return proto.CompactTextString(m) }
func (*MsgFastFinalizeWithTEE) ProtoMessage()    {}
func (*MsgFastFinalizeWithTEE) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0a9bd9f57bfdee, []int{0}
}
func (m *MsgFastFinalizeWithTEE) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFastFinalizeWithTEE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFastFinalizeWithTEE.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFastFinalizeWithTEE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFastFinalizeWithTEE.Merge(m, src)
}
func (m *MsgFastFinalizeWithTEE) XXX_Size() int {
	return m.Size()
}
func (m *MsgFastFinalizeWithTEE) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFastFinalizeWithTEE.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFastFinalizeWithTEE proto.InternalMessageInfo

func (m *MsgFastFinalizeWithTEE) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFastFinalizeWithTEE) GetAttestationToken() string {
	if m != nil {
		return m.AttestationToken
	}
	return ""
}

func (m *MsgFastFinalizeWithTEE) GetNonce() TEENonce {
	if m != nil {
		return m.Nonce
	}
	return TEENonce{}
}

func (m *MsgFastFinalizeWithTEE) GetStateIndex() uint64 {
	if m != nil {
		return m.StateIndex
	}
	return 0
}

// what the verifying full node inside the tee actually attests over
type TEENonce struct {
	RollappId string `protobuf:"bytes,2,opt,name=rollapp_id,json=rollappId,proto3" json:"rollapp_id,omitempty"`
	// height TEE recently validated
	CurrHeight uint64 `protobuf:"varint,1,opt,name=curr_height,json=currHeight,proto3" json:"curr_height,omitempty"`
	// height TEE started from (which must be finalized)
	FinalizedHeight uint64 `protobuf:"varint,4,opt,name=finalized_height,json=finalizedHeight,proto3" json:"finalized_height,omitempty"`
}

func (m *TEENonce) Reset()         { *m = TEENonce{} }
func (m *TEENonce) String() string { return proto.CompactTextString(m) }
func (*TEENonce) ProtoMessage()    {}
func (*TEENonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0a9bd9f57bfdee, []int{1}
}
func (m *TEENonce) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TEENonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TEENonce.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TEENonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TEENonce.Merge(m, src)
}
func (m *TEENonce) XXX_Size() int {
	return m.Size()
}
func (m *TEENonce) XXX_DiscardUnknown() {
	xxx_messageInfo_TEENonce.DiscardUnknown(m)
}

var xxx_messageInfo_TEENonce proto.InternalMessageInfo

func (m *TEENonce) GetRollappId() string {
	if m != nil {
		return m.RollappId
	}
	return ""
}

func (m *TEENonce) GetCurrHeight() uint64 {
	if m != nil {
		return m.CurrHeight
	}
	return 0
}

func (m *TEENonce) GetFinalizedHeight() uint64 {
	if m != nil {
		return m.FinalizedHeight
	}
	return 0
}

// MsgFastFinalizeWithTEEResponse is the response for MsgFastFinalizeWithTEE
type MsgFastFinalizeWithTEEResponse struct {
}

func (m *MsgFastFinalizeWithTEEResponse) Reset()         { *m = MsgFastFinalizeWithTEEResponse{} }
func (m *MsgFastFinalizeWithTEEResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFastFinalizeWithTEEResponse) ProtoMessage()    {}
func (*MsgFastFinalizeWithTEEResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd0a9bd9f57bfdee, []int{2}
}
func (m *MsgFastFinalizeWithTEEResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFastFinalizeWithTEEResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFastFinalizeWithTEEResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFastFinalizeWithTEEResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFastFinalizeWithTEEResponse.Merge(m, src)
}
func (m *MsgFastFinalizeWithTEEResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFastFinalizeWithTEEResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFastFinalizeWithTEEResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFastFinalizeWithTEEResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFastFinalizeWithTEE)(nil), "dymensionxyz.dymension.rollapp.MsgFastFinalizeWithTEE")
	proto.RegisterType((*TEENonce)(nil), "dymensionxyz.dymension.rollapp.TEENonce")
	proto.RegisterType((*MsgFastFinalizeWithTEEResponse)(nil), "dymensionxyz.dymension.rollapp.MsgFastFinalizeWithTEEResponse")
}

func init() {
	proto.RegisterFile("types/dymensionxyz/dymension/rollapp/tee.proto", fileDescriptor_cd0a9bd9f57bfdee)
}

var fileDescriptor_cd0a9bd9f57bfdee = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x6a, 0xdb, 0x30,
	0x1c, 0xc7, 0xad, 0xe1, 0x64, 0x8b, 0x32, 0x58, 0x66, 0xc6, 0x30, 0x81, 0x28, 0x26, 0x27, 0x6f,
	0x03, 0x9b, 0x6d, 0xb7, 0x1d, 0xc3, 0x1c, 0x96, 0xc3, 0x7a, 0x30, 0x81, 0x42, 0x2f, 0xae, 0x63,
	0xab, 0xb6, 0x68, 0x2c, 0x19, 0x4b, 0x29, 0x49, 0x8e, 0x7d, 0x82, 0x3e, 0x4a, 0x1f, 0x23, 0xc7,
	0x1c, 0x7a, 0xe8, 0xa9, 0x94, 0xe4, 0xd0, 0xd7, 0x28, 0x92, 0xed, 0x34, 0xd0, 0xd2, 0x9e, 0xec,
	0xdf, 0x57, 0x1f, 0x7d, 0xf5, 0xfb, 0x07, 0x1d, 0xb1, 0xcc, 0x31, 0x77, 0xe3, 0x65, 0x86, 0x29,
	0x27, 0x8c, 0x2e, 0x96, 0xab, 0xa7, 0xc0, 0x2d, 0xd8, 0x6c, 0x16, 0xe6, 0xb9, 0x2b, 0x30, 0x76,
	0xf2, 0x82, 0x09, 0x66, 0xa0, 0x43, 0xd2, 0xd9, 0x07, 0x4e, 0x45, 0x76, 0xbf, 0x24, 0x2c, 0x61,
	0x0a, 0x75, 0xe5, 0x5f, 0x79, 0xab, 0xdb, 0x2b, 0x5f, 0x89, 0x18, 0xcf, 0x18, 0x77, 0x33, 0x9e,
	0xb8, 0x17, 0x3f, 0xe5, 0xa7, 0x3c, 0x1e, 0xdc, 0x00, 0xf8, 0xf5, 0x3f, 0x4f, 0x46, 0x21, 0x17,
	0x23, 0x42, 0xc3, 0x19, 0x59, 0xe1, 0x63, 0x22, 0xd2, 0x89, 0xe7, 0x19, 0x26, 0x7c, 0x1f, 0x15,
	0x38, 0x14, 0xac, 0x30, 0x81, 0x05, 0xec, 0x96, 0x5f, 0x87, 0xc6, 0x0f, 0xf8, 0x39, 0x14, 0x02,
	0x73, 0x11, 0x0a, 0xc2, 0x68, 0x20, 0xd8, 0x39, 0xa6, 0xa6, 0xae, 0x98, 0xce, 0xc1, 0xc1, 0x44,
	0xea, 0xc6, 0x5f, 0xd8, 0xa0, 0x8c, 0x46, 0xd8, 0x6c, 0x58, 0xc0, 0x6e, 0xff, 0xb2, 0x9d, 0xd7,
	0xcb, 0x70, 0x26, 0x9e, 0x77, 0x24, 0xf9, 0xa1, 0xbe, 0xbe, 0xeb, 0x6b, 0x7e, 0x79, 0xd9, 0xe8,
	0xc3, 0xb6, 0x74, 0xc5, 0x01, 0xa1, 0x31, 0x5e, 0x98, 0x4d, 0x0b, 0xd8, 0xba, 0x0f, 0x95, 0x34,
	0x96, 0xca, 0x9f, 0x8f, 0x97, 0x0f, 0xd7, 0xdf, 0xeb, 0x0c, 0x07, 0x73, 0xf8, 0xa1, 0xf6, 0x31,
	0x7a, 0x10, 0x56, 0xde, 0x01, 0x89, 0xcd, 0x77, 0x2a, 0xcd, 0x56, 0xa5, 0x8c, 0x63, 0xe9, 0x1c,
	0xcd, 0x8b, 0x22, 0x48, 0x31, 0x49, 0x52, 0xa1, 0x4a, 0xd5, 0x7d, 0x28, 0xa5, 0x7f, 0x4a, 0x31,
	0xbe, 0xc1, 0xce, 0x59, 0xd5, 0x9a, 0xb8, 0xa6, 0x74, 0x45, 0x7d, 0xda, 0xeb, 0x25, 0x3a, 0xb0,
	0x20, 0x7a, 0xb9, 0x99, 0x3e, 0xe6, 0x39, 0xa3, 0x1c, 0x0f, 0x4f, 0xd7, 0x5b, 0x04, 0x36, 0x5b,
	0x04, 0xee, 0xb7, 0x08, 0x5c, 0xed, 0x90, 0xb6, 0xd9, 0x21, 0xed, 0x76, 0x87, 0xb4, 0x93, 0x51,
	0x42, 0x44, 0x3a, 0x9f, 0x3a, 0x11, 0xcb, 0x9e, 0xed, 0x04, 0xa1, 0xc2, 0x2d, 0xe7, 0x98, 0x4f,
	0xdf, 0x58, 0x98, 0x69, 0x53, 0x0d, 0xf6, 0xf7, 0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0x13, 0xc7,
	0x4b, 0xb8, 0x5f, 0x02, 0x00, 0x00,
}

func (m *MsgFastFinalizeWithTEE) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFastFinalizeWithTEE) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFastFinalizeWithTEE) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StateIndex != 0 {
		i = encodeVarintTee(dAtA, i, uint64(m.StateIndex))
		i--
		dAtA[i] = 0x30
	}
	{
		size, err := m.Nonce.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTee(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.AttestationToken) > 0 {
		i -= len(m.AttestationToken)
		copy(dAtA[i:], m.AttestationToken)
		i = encodeVarintTee(dAtA, i, uint64(len(m.AttestationToken)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTee(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TEENonce) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TEENonce) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TEENonce) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FinalizedHeight != 0 {
		i = encodeVarintTee(dAtA, i, uint64(m.FinalizedHeight))
		i--
		dAtA[i] = 0x20
	}
	if len(m.RollappId) > 0 {
		i -= len(m.RollappId)
		copy(dAtA[i:], m.RollappId)
		i = encodeVarintTee(dAtA, i, uint64(len(m.RollappId)))
		i--
		dAtA[i] = 0x12
	}
	if m.CurrHeight != 0 {
		i = encodeVarintTee(dAtA, i, uint64(m.CurrHeight))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgFastFinalizeWithTEEResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFastFinalizeWithTEEResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFastFinalizeWithTEEResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTee(dAtA []byte, offset int, v uint64) int {
	offset -= sovTee(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgFastFinalizeWithTEE) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTee(uint64(l))
	}
	l = len(m.AttestationToken)
	if l > 0 {
		n += 1 + l + sovTee(uint64(l))
	}
	l = m.Nonce.Size()
	n += 1 + l + sovTee(uint64(l))
	if m.StateIndex != 0 {
		n += 1 + sovTee(uint64(m.StateIndex))
	}
	return n
}

func (m *TEENonce) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrHeight != 0 {
		n += 1 + sovTee(uint64(m.CurrHeight))
	}
	l = len(m.RollappId)
	if l > 0 {
		n += 1 + l + sovTee(uint64(l))
	}
	if m.FinalizedHeight != 0 {
		n += 1 + sovTee(uint64(m.FinalizedHeight))
	}
	return n
}

func (m *MsgFastFinalizeWithTEEResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTee(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTee(x uint64) (n int) {
	return sovTee(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgFastFinalizeWithTEE) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTee
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFastFinalizeWithTEE: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFastFinalizeWithTEE: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTee
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTee
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AttestationToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTee
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTee
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AttestationToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTee
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTee
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Nonce.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StateIndex", wireType)
			}
			m.StateIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StateIndex |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTee(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTee
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TEENonce) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTee
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TEENonce: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TEENonce: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrHeight", wireType)
			}
			m.CurrHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CurrHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RollappId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTee
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTee
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RollappId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalizedHeight", wireType)
			}
			m.FinalizedHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTee
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FinalizedHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTee(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTee
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFastFinalizeWithTEEResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTee
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFastFinalizeWithTEEResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFastFinalizeWithTEEResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTee(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTee
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTee(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTee
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTee
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTee
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTee
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTee
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTee
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTee        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTee          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTee = fmt.Errorf("proto: unexpected end of group")
)
